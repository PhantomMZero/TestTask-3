#pragma once
#include <vector>


class AtmosphericParameters {
private:
	struct standardAtmosphericParameters {
		double height = 0; //Геометрическая высота
		double t = 0; //Температура 0C
		double P = 0; //Давление Па
		double p = 0; //Плотность кг/м^3
		double g = 0; //Ускорение свободного падения м/с^2
	};
	std::vector<standardAtmosphericParameters> tableStandardAtmosphericParameters{
		{0, 15, 101325, 1.225, 9.8066},
		{50, 14.675, 100726, 1.21913, 9.8065},
		{100, 14.350, 100129, 1.21328, 9.8063},
		{150, 14.025, 99536, 1.20746, 9.8062},
		{200, 13.700, 98945.4, 1.20165, 9.8060},
		{250, 13.375, 98357.6, 1.19587, 9.8059},
		{300, 13.050, 97772.7, 1.19011, 9.8057},
		{350, 12.725, 97190.7, 1.18437, 9.8056},
		{400, 12.400, 96611.4, 1.17865, 9.8054},
		{450, 12.075, 96035, 1.17295, 9.8053},
		{500, 11.750, 95461.3, 1.16727, 9.8051},
		{550, 11.425, 94890.4, 1.16162, 9.8050},
		{600, 11.1, 94322.3, 1.15598, 9.8048},
		{650, 10.775, 93757, 1.15037, 9.8046},
		{700, 10.451, 93194.4, 1.14478, 9.8045},
		{750, 10.126, 92634.6, 1.13921, 9.8043},
		{800, 9.801, 92077.5, 1.13366, 9.8042},
		{850, 9.476, 91523.1, 1.12813, 9.8040},
		{900, 9.151, 90971.5, 1.12261, 9.8039},
		{950, 8.826, 90422.5, 1.11713, 9.8037},
		{1000, 8.501, 89876.3, 1.11166, 9.8036},
		{1050, 8.176, 89332.7, 1.10621, 9.8034},
		{1100, 7.851, 88791.8, 1.10079, 9.8033},
		{1150, 7.526, 88253.6, 1.09538, 9.8031},
		{1200, 7.201, 87718,   1.08999, 9.8029},
		{1250, 6.877, 87185.1, 1.08463, 9.8028},
		{1300, 6.552, 86654.8, 1.07928, 9.8026},
		{1350, 6.227, 86127.1, 1.07396, 9.8025},
		{1400, 5.902, 85602, 1.06865, 9.8023},
		{1450, 5.577, 85079.5, 1.06337, 9.8022},
		{1500, 5.252, 84559.7, 1.0581, 9.8020},
		{1550, 4.927, 84042.4, 1.05286, 9.8019},
		{1600, 4.603, 83527.7, 1.04764, 9.8017},
		{1650, 4.278, 83015.5, 1.04243, 9.8016},
		{1700, 3.953, 82505.9, 1.03725, 9.8014},
		{1750, 3.628, 81998.9, 1.03208, 9.8013},
		{1800, 3.303, 81494.3, 1.02694, 9.8011},
		{1850, 2.979, 80992.3, 1.02181, 9.8009},
		{1900, 2.654, 80492.9, 1.01671, 9.8008},
		{1950, 2.329, 79995.9, 1.01162, 9.8006},
		{2000, 2.004, 79501.4, 1.00655, 9.8005},
		{2050, 1.679, 79009.4, 1.00151, 9.8003},
		{2100, 1.355, 78519.9, 0.996479, 9.8002},
		{2150, 1.030, 78032.9, 0.991471, 9.8},
		{2200, 0.705, 77548.3, 0.986483, 9.7999},
		{2250, 0.380, 77066.1, 0.981513, 9.7997},
		{2300, 0.055, 76586.4, 0.976563, 9.7996},
		{2350, -0.269, 76109.1,0.971632, 9.7994},
		{2400, -0.594, 75634.2,0.966721, 9.7992},
		{2450, -0.919, 75161.8,0.961828, 9.7991},
		{2500, -1.244, 74691.7,0.956954, 9.7989},
		{2550, -1.568, 74224.1,0.9521, 9.7988},
		{2600, -1.893, 73758.8,0.947264, 9.7986},
		{2650, -2.218, 73295.9,0.942447,9.7985},
		{2700, -2.543, 72835.3,0.937649,9.7983},
		{2750, -2.867, 72377.1,0.932870,9.7982},
		{2800, -3.192, 71921.3,0.92811, 9.7980},
		{2850, -3.517, 71467.8,0.923368,9.7979},
		{2900, -3.841, 71016.6,0.918645,9.7977},
		{2950, -4.166, 70567.7,0.91394, 9.7976},
		{3000, -4.491, 70121.2,0.909254,9.7974},
		{3050, -4.815, 69676.9,0.904587,9.7972},
		{3100, -5.140, 69234.9,0.899938,9.7971},
		{3150, -5.465, 68795.2,0.895307,9.7969},
		{3200, -5.790, 68357.8,0.890694,9.7968},
		{3250, -6.114, 67922.6,0.8861, 9.7966},
		{3300, -6.439, 67489.7,0.881524,9.7965},
		{3350, -6.764, 67059,  0.876967,9.7963},
		{3400, -7.088, 66630.6,0.872427,9.7962},
		{3450, -7.413, 66204.4,0.867905,9.7960},
		{3500, -7.737, 65780.4,0.863402,9.7959},
		{3550, -8.062, 65358.6,0.858916,9.7957},
		{3600, -8.387, 64939,  0.854449,9.7956},
		{3650, -8.711, 64521.6,0.849999,9.7954},
		{3700, -9.036, 64106.4,0.845567,9.7952},
		{3750, -9.361, 63693.3,0.841153,9.7951},
		{3800, -9.685, 63282.5,0.836756,9.7949},
		{3850, -10.01, 62873.7,0.832377,9.7948},
		{3900, -10.334,62467.2,0.828016,9.7946},
		{3950, -10.659,62062.7,0.823673,9.7945},
		{4000, -10.984,61660.4,0.819347,9.7943},
		{4050, -11.308,61260.2,0.815038, 9.7942},
		{4100, -11.633,60862.2,0.810747, 9.7940},
		{4150, -11.957,60466.2,0.806473, 9.7939},
		{4200, -12.282,60072.3,0.802216, 9.7937},
		{4250, -12.607,59680.5,0.797977, 9.7936},
		{4300, -12.931,59290.8,0.793755, 9.7934},
		{4350, -13.256,58903.2,0.78955,  9.7932},
		{4400, -13.580,58517.6,0.785363, 9.7931},
		{4450, -13.905,58134,  0.781192, 9.7929},
		{4500, -14.229,57752.6,0.777038, 9.7928},
		{4550, -14.554,57373.1,0.772902, 9.7926},
		{4600, -14.878,56995.7,0.768782, 9.7925},
		{4650, -15.203,56620.3,0.764679, 9.7923},
		{4700, -15.527,56246.9,0.760593, 9.7922},
		{4750, -15.852,55875.5,0.756524, 9.7920},
		{4800, -16.176,55061, 0.752472, 9.7919},
		{4850, -16.501,55138.7,0.748436, 9.7917},
		{4900, -16.825,54773.2,0.744417, 9.7915},
		{4950, -17.150,54409.8,0.740415, 9.7914},
		{5000, -17.474,54048.3,0.736429, 9.7912},
		{5050, -17.799,53688.7,0.732459, 9.7911},
		{5100, -18.123,53331.1,0.728506, 9.7909},
		{5150, -18.448,52975.4,0.72457,  9.7908},
		{5200, -18.772, 52621.7, 0.720649, 9.7906},
		{5250, -19.097, 52269.9, 0.716745, 9.7905},
		{5300, -19.421, 51620,   0.712858, 9.7903},
		{5350, -19.746, 51572,   0.708986, 9.7902},
		{5400, -20.070, 51225.9, 0.705131, 9.7900},
		{5450, -20.395, 50881.6, 0.701292, 9.7899},
		{5500, -20.719, 50539.3, 0.697469, 9.7897},
		{5550, -21.044, 50198.8, 0.693662, 9.7895},
		{5600, -21.368, 49860.2, 0.689871, 9.7894},
		{5650, -21.692, 49523.5, 0.686095, 9.7892},
		{5700, -22.017, 49188.6, 0.682336, 9.7891},
		{5750, -22.341, 48855.5, 0.678593, 9.7889},
		{5800, -22.666, 48524.3, 0.674865, 9.7888},
		{5850, -22.990, 48194.9, 0.671153, 9.7886},
		{5900, -23.314, 47867.3, 0.667457, 9.7885},
		{5950, -23.639, 47541.6, 0.663776, 9.7883},
		{6000, -23.963, 47217.6, 0.66011,  9.7882},
		{6050, -24.288, 46895.5, 0.656462, 9.7880},
		{6100, -24.612, 46575.1, 0.652828, 9.7879},
		{6150, -24.936, 46256.5, 0.649210, 9.7877},
		{6200, -25.261, 45939.6, 0.645607, 9.7875},
		{6250, -25.585, 45624.6, 0.642019, 9.7874},
		{6300, -25.909, 45311.3, 0.638447, 9.7872},
		{6350, -26.234, 44999.7, 0.634890, 9.7871},
		{6400, -26.558, 44689.9, 0.631348, 9.7869},
		{6450, -26.883, 44381.8, 0.627821, 9.7868},
		{6500, -27.207, 44075.5, 0.624310, 9.7866},
		{6550, -27.531, 43770.8, 0.620813, 9.7865},
		{6600, -27.856, 43467.9, 0.617332, 9.7863},
		{6650, -28.180, 43166.7, 0.613866, 9.7862},
		{6700, -28.504, 42867.2, 0.610415, 9.7860},
		{6750, -28.828, 42569.3, 0.606978, 9.7859},
		{6800, -29.153, 42273.2, 0.603557, 9.7857},
		{6850, -29.477, 41978.7, 0.600150, 9.7855},
		{6900, -29.801, 41685.9, 0.596758, 9.7854},
		{6950, -30.126, 41394.7, 0.593381, 9.7852},
		{7000, -30.450, 41105.3, 0.590018, 9.7851},
		{7050, -30.774, 40817.4, 0.586671, 9.7849},
		{7100, -31.099, 40531.2, 0.583337, 9.7848},
		{7150, -31.429, 40246.6, 0.580019, 9.7846},
		{7200, -31.747, 39963.7, 0.576715, 9.7845},
		{7250, -32.071, 39682.3, 0.573425, 9.7843},
		{7300, -32.396, 39402.6, 0.570150, 9.7842},
		{7350, -32.720, 39124.5, 0.566889, 9.7840},
		{7400, -33.044, 38848.0, 0.563642, 9.7839},
		{7450, -33.368, 38573.0, 0.560410, 9.7837},
		{7500, -33.693, 38299.7, 0.557192, 9.7836},
		{7550, -34.017, 38027.9, 0.553988, 9.7834},
		{7600, -34.341, 37757.7, 0.550798, 9.7832},
		{7650, -34.665, 37489.0, 0.547623, 9.7831}
	};

public:

	double CelsiusToKelvin(double tCelsius) {
		return tCelsius + 273.15;
	}

	double findAirDensity(double height) {
		double airDensity = tableStandardAtmosphericParameters[0].p;
		for (int i = 0; i < tableStandardAtmosphericParameters.size(); ++i) {
			airDensity = tableStandardAtmosphericParameters[i].p;
			if (tableStandardAtmosphericParameters[i].height >= height) {
				break;
			}
		}
		return airDensity;
	}

	double findAirTemperature(double height) {
		double airTemperature = tableStandardAtmosphericParameters[0].t;
		for (int i = 0; i < tableStandardAtmosphericParameters.size(); ++i) {
			airTemperature = tableStandardAtmosphericParameters[i].t;
			if (tableStandardAtmosphericParameters[i].height >= height) {
				break;
			}
		}
		return airTemperature;
	}

	double findAirPressure(double height) {
		double airPressure = tableStandardAtmosphericParameters[0].P;
		for (int i = 0; i < tableStandardAtmosphericParameters.size(); ++i) {
			airPressure = tableStandardAtmosphericParameters[i].P;
			if (tableStandardAtmosphericParameters[i].height >= height) {
				break;
			}
		}
		return airPressure;
	}

	double findAccelerationOfFreeFall(double height) {
		double accelerationOfFreeFall = tableStandardAtmosphericParameters[0].g;
		for (int i = 0; i < tableStandardAtmosphericParameters.size(); ++i) {
			accelerationOfFreeFall = tableStandardAtmosphericParameters[i].g;
			if (tableStandardAtmosphericParameters[i].height >= height) {
				break;
			}
		}
		return accelerationOfFreeFall;
	}
};

